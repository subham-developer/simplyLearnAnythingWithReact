{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamlal/DevelopmentCodes/simplylearnanythingReact/simplylearn/src/Components/Header.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nexport default function Header(props) {\n  console.log(props);\n  const sections = props.sections,\n        title = props.title; // export default class Header extends Component{\n  //     constructor(props){\n  //         super(props);\n  //         console.log(props);\n  //     }\n  // render(){\n\n  const useStyles = makeStyles(theme => ({\n    toolbar: {\n      borderBottom: `1px solid ${theme.palette.divider}`\n    },\n    toolbarTitle: {\n      flex: 1\n    },\n    toolbarSecondary: {\n      justifyContent: 'space-between',\n      overflowX: 'auto'\n    },\n    toolbarLink: {\n      padding: theme.spacing(1),\n      flexShrink: 0\n    }\n  }));\n  const classes = useStyles();\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    className: classes.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Subscribe\"), React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h5\",\n    color: \"inherit\",\n    align: \"center\",\n    noWrap: true,\n    className: classes.toolbarTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, this.props.title), React.createElement(IconButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(SearchIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Sign up\")), React.createElement(Toolbar, {\n    component: \"nav\",\n    variant: \"dense\",\n    className: classes.toolbarSecondary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, this.props.sections.map(section => React.createElement(Link, {\n    color: \"inherit\",\n    noWrap: true,\n    key: section.title,\n    variant: \"body2\",\n    href: section.url,\n    className: classes.toolbarLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, section.title)))); // }\n}\nHeader.propTypes = {\n  sections: PropTypes.array,\n  title: PropTypes.string\n};","map":{"version":3,"sources":["/Users/shubhamlal/DevelopmentCodes/simplylearnanythingReact/simplylearn/src/Components/Header.js"],"names":["React","Component","PropTypes","makeStyles","Toolbar","Button","IconButton","SearchIcon","Typography","Link","Header","props","console","log","sections","title","useStyles","theme","toolbar","borderBottom","palette","divider","toolbarTitle","flex","toolbarSecondary","justifyContent","overflowX","toolbarLink","padding","spacing","flexShrink","classes","map","section","url","propTypes","array","string"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\n\n\nexport default function Header(props) {\n    console.log(props);\n  \n  const { sections, title } = props;\n// export default class Header extends Component{\n//     constructor(props){\n//         super(props);\n//         console.log(props);\n//     }\n    \n    \n    // render(){\n        const useStyles = makeStyles(theme => ({\n            toolbar: {\n              borderBottom: `1px solid ${theme.palette.divider}`,\n            },\n            toolbarTitle: {\n              flex: 1,\n            },\n            toolbarSecondary: {\n              justifyContent: 'space-between',\n              overflowX: 'auto',\n            },\n            toolbarLink: {\n              padding: theme.spacing(1),\n              flexShrink: 0,\n            },\n          }));\n          const classes = useStyles();\n        \n    return (\n        \n        <React.Fragment>\n        <Toolbar className={classes.toolbar}>\n            <Button size=\"small\">Subscribe</Button>\n            <Typography\n            component=\"h2\"\n            variant=\"h5\"\n            color=\"inherit\"\n            align=\"center\"\n            noWrap\n            className={classes.toolbarTitle}\n            >\n            {this.props.title}\n            </Typography>\n            <IconButton>\n            <SearchIcon />\n            </IconButton>\n            <Button variant=\"outlined\" size=\"small\">\n            Sign up\n            </Button>\n        </Toolbar>\n        <Toolbar component=\"nav\" variant=\"dense\" className={classes.toolbarSecondary}>\n            {this.props.sections.map(section => (\n            <Link\n                color=\"inherit\"\n                noWrap\n                key={section.title}\n                variant=\"body2\"\n                href={section.url}\n                className={classes.toolbarLink}\n            >\n                {section.title}\n            </Link>\n            ))}\n        </Toolbar>\n        </React.Fragment>\n    );\n    // }\n    }\n  \n\nHeader.propTypes = {\n  sections: PropTypes.array,\n  title: PropTypes.string,\n};"]},"metadata":{},"sourceType":"module"}