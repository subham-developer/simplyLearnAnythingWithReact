{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamlal/DevelopmentCodes/simplylearnanythingReact/simplylearn/src/Components/Header.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Redirect, useHistory, Link, Route, Switch } from 'react-router-dom';\nimport Home from './Home';\nimport About from './About'; // import Category from './Category/Index';\n// import Dashboard from './Dashboard/Dashboard';\n\nimport Popup from './Popup';\nimport { SocialIcon } from 'react-social-icons';\nimport '../css/style.css';\nimport { Button } from 'react-bootstrap';\nimport Modal from 'react-bootstrap/Modal';\nimport ModalTitle from 'react-bootstrap/ModalTitle';\nimport ModalBody from 'react-bootstrap/ModalBody';\nimport ModalFooter from 'react-bootstrap/ModalFooter';\nimport Form from 'react-bootstrap/Form';\nimport logo from './Images/mumbai2.png';\nimport DynamicContent from './DynamicContent';\nimport Notfound from './Notfound';\nimport axios from \"axios\";\nexport default class Header extends Component {\n  constructor() {\n    super();\n    this.state = {\n      categories: [],\n      postContents: [],\n      isLogin: false,\n      modalShow: false,\n      registerModalShow: false,\n      forgetModalShow: false,\n      validated: false,\n      email: ' ',\n      password: ' ',\n      errormessage: ' ',\n      loginEmail: 'Email',\n      loginPassword: 'Password',\n      registerationUserName: 'Username',\n      registrationConfirmPassword: 'ConfirmPassword',\n      forgetEmail: 'Email Id',\n      token: '',\n      errorMessage: '',\n      successMessage: '',\n      urlName: '',\n      urlContent: 'Hello World Shubham',\n      active: false\n    };\n  } // const [validated, setValidated] = useState(false);\n\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const form = event.currentTarget;\n    let err = '';\n    console.log(form.email);\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    if (this.state.email === ' ') {\n      // alert(\"Please Enter Proper Email\");\n      err = React.createElement(\"strong\", {\n        className: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Please Enter Proper Email\");\n      this.setState({\n        errormessage: err\n      });\n    }\n\n    if (this.state.password === ' ') {\n      // alert(\"Please Enter Correct Password\");\n      err = React.createElement(\"strong\", {\n        className: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Please Enter Correct Password\");\n      this.setState({\n        errormessage: err\n      });\n    }\n\n    this.setState({\n      validated: true\n    });\n    let data = {\n      name: this.state.registerationUserName,\n      email: this.state.email,\n      password: this.state.registrationConfirmPassword,\n      c_password: this.state.registrationConfirmPassword\n    }; // console.log(`Hi I am from Data ${data.name}`);\n    // setValidated(true);\n  }\n\n  myChangeHandler(event) {\n    event.preventDefault();\n    console.log(event.target.name);\n    let nam = event.target.name;\n    let val = event.target.value;\n    console.log(`Hi${event.target.name}`);\n    this.setState({\n      [nam]: val\n    });\n    console.log(`Hello${this.state.loginEmail}`);\n  }\n\n  componentDidMount() {\n    var config = {\n      headers: {\n        'Access-Control-Allow-Origin': '*.learnincredible.com',\n        'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n        'Access-Control-Allow-Headers': 'X-Requested-With',\n        'X-Requested-With': 'XMLHttpRequest'\n      }\n    };\n    axios.get('/api/CategoryName').then(response => {\n      this.setState({\n        categories: response.data.data // urlContent: \"Hello World Shubham\"\n\n      });\n      console.log(response.data.data);\n      console.log(response.status);\n      console.log(response);\n      console.log(this.state.categories);\n      console.log(typeof response);\n    });\n  }\n\n  loginUser() {\n    var emailId = this.state.email;\n    var password = this.state.password;\n    console.log(`Hey${emailId}`);\n    console.log(password);\n    this.loginApiUser(emailId, password); // if(emailId == 'Shubham' && password == 'Shubham'){\n    //     this.setState({\n    //         isLogin: true\n    //     });\n    // }\n    // this.setState({\n    //     isLogin: false\n    // });\n    // console.log(this.state.isLogin);\n  }\n\n  loginApiUser(emailId, password) {\n    console.log(`I am From LoginAPI USeremail${emailId}`);\n    console.log(`I am From LoginAPI User Password${password}`);\n    var bodyFormData = new FormData();\n    var myurl = '/api/login';\n    bodyFormData.set(`${emailId}`, `${password}`);\n    console.log(bodyFormData); // axios.post('http://localhost:8000/api/login')\n    //     .then(response => {\n    //         this.setState({ categories: response.data });\n    //     });\n\n    axios({\n      method: 'post',\n      url: 'http://localhost:8000/api/login',\n      data: {\n        email: `${emailId}`,\n        password: `${password}`\n      } // headers: {'Content-Type': 'application/json' }\n\n    }).then(response => {\n      // handle success\n      console.log('first one');\n      console.log(response.data.success.token);\n      console.log(response.data);\n      console.log(response.status);\n      console.log(response.statusText);\n      console.log(response.headers);\n      console.log(response.config);\n      console.log(response.data);\n      console.log(response);\n      this.setState({\n        token: response.data.success.token,\n        isLogin: true,\n        successMessage: \"You have successfully Logged In\"\n      });\n    }) // {\n    //     \n    // }).then(response => {\n    //     this.setState({ categories: response.data });\n    // });\n    .catch(response => {\n      //handle error\n      console.log('second one');\n      console.log(response);\n    });\n  }\n\n  loginOut() {\n    this.setState({\n      isLogin: false,\n      email: ' ',\n      password: ' ',\n      token: ' '\n    });\n    console.log(this.state.isLogin);\n  }\n\n  handleClose() {\n    this.setState({\n      modalShow: false,\n      registerModalShow: false,\n      forgetModalShow: false\n    });\n    console.log(this.state.modalShow);\n  }\n\n  ShowRegistrationForm() {\n    this.setState({\n      modalShow: false,\n      registerModalShow: true,\n      forgetModalShow: false\n    });\n  }\n\n  ShowForgetPassword() {\n    this.setState({\n      modalShow: false,\n      registerModalShow: false,\n      forgetModalShow: true\n    });\n  }\n\n  handleShow() {\n    this.setState({\n      modalShow: true,\n      registerModalShow: false,\n      forgetModalShow: false\n    });\n    console.log('Hi' + this.state.modalShow);\n  }\n\n  loadContent(slug) {\n    // console.log(slug);\n    axios({\n      method: 'GET',\n      url: `http://localhost:8000/api/getContents/${slug}` // data: {\n      //     slug:  `${slug}`\n      // }\n\n    }).then(response => {\n      if (response.data.data.length != 0) {\n        this.setState({\n          urlName: `${slug}`,\n          urlContent: `${slug}`,\n          postContents: response.data.data,\n          active: true\n        }); // console.log(this.state.postContents)\n        // console.log(response.data.data.length);\n        // console.log(typeof(response.data.data));\n        // console.log(response.data.data);\n\n        console.log(this.state.postContents);\n      } else {\n        console.log('empty');\n      } // console.log(response.data);\n      // console.log(response);\n\n    }).catch(response => {\n      console.log('Error Logs');\n    });\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: \"navbar navbar-expand-lg navbar-dark bg-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"navbar-nav mr-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"nav-item active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(SocialIcon, {\n      url: \"https://facebook.com/jaketrent\",\n      network: \"facebook\",\n      style: {\n        height: 25,\n        width: 25\n      },\n      bgColor: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }), \" \\xA0\\xA0\", React.createElement(SocialIcon, {\n      url: \"https://twitter.com/jaketrent\",\n      network: \"twitter\",\n      style: {\n        height: 25,\n        width: 25\n      },\n      bgColor: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), \" \\xA0\\xA0\", React.createElement(SocialIcon, {\n      url: \"https://linkedin.com/jaketrent\",\n      network: \"linkedin\",\n      style: {\n        height: 25,\n        width: 25\n      },\n      bgColor: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }), \" \\xA0\\xA0\")), React.createElement(\"span\", {\n      style: {\n        color: \"white\"\n      },\n      onClick: this.handleShow.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, \"Login\")), React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      onClick: this.loadContent.bind(this, `/`),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"Simply Learn Anything\"))), React.createElement(\"nav\", {\n      className: \"navbar navbar-expand-lg navbar-dark bg-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"collapse navbar-collapse\",\n      id: \"navbarSupportedContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"navbar-nav mr-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, this.state.categories.map(category => {\n      return React.createElement(\"li\", {\n        className: `nav-item ${this.state.active ? \"active\" : \"inactive\"}`,\n        onClick: this.loadContent.bind(this, `${category.slug}`),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: `/${category.slug}`,\n        className: \"nav-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, category.name, \" \", React.createElement(\"span\", {\n        className: \"sr-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, \"(current)\")));\n    }), React.createElement(\"li\", {\n      className: \"nav-item active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/about\",\n      className: \"nav-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, \"About Us\", React.createElement(\"span\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, \"(current)\")))))), this.state.categories.map(category => {\n      return React.createElement(Route, {\n        exact: true,\n        path: `${category.slug}`,\n        component: `${category.name}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      });\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `/${this.state.urlName}`,\n      render: props => React.createElement(DynamicContent, Object.assign({}, props, {\n        isMyName: this.state.postContents,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/about\",\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"*\",\n      component: Notfound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    })), React.createElement(Modal, {\n      show: this.state.modalShow,\n      onHide: this.handleClose.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, \"Login Form\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(Form, {\n      noValidate: true,\n      validated: this.state.validated,\n      onSubmit: this.handleSubmit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formGroupEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, this.state.loginEmail), React.createElement(Form.Control, {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Enter email\",\n      autoComplete: \"off\",\n      required: true,\n      onChange: this.myChangeHandler.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formGroupPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, this.state.loginPassword), React.createElement(Form.Control, {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      autoComplete: \"off\",\n      required: true,\n      onChange: this.myChangeHandler.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      id: \"formGridCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, React.createElement(Form.Check, {\n      type: \"checkbox\",\n      label: \"Remember Me\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"submit\",\n      className: \"text-center\",\n      onClick: this.loginUser.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, \"Login\"))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.ShowForgetPassword.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, \"Forget Password\"), React.createElement(Button, {\n      type: \"submit\",\n      variant: \"success\",\n      onClick: this.ShowRegistrationForm.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, \"Create New Account\"))), React.createElement(Modal, {\n      show: this.state.registerModalShow,\n      onHide: this.handleClose.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, \"Registration Form\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, React.createElement(Form, {\n      noValidate: true,\n      validated: this.state.validated,\n      onSubmit: this.handleSubmit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formGroupEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, this.state.registerationUserName), React.createElement(Form.Control, {\n      type: \"text\",\n      name: `${this.state.registerationUserName}`,\n      placeholder: \"Enter email\",\n      autoComplete: \"off\",\n      required: true,\n      onChange: this.myChangeHandler.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formGroupEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, this.state.loginEmail), React.createElement(Form.Control, {\n      type: \"email\",\n      name: `${this.state.loginEmail}`,\n      placeholder: \"Enter email\",\n      autoComplete: \"off\",\n      required: true,\n      onChange: this.myChangeHandler.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formGroupPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, this.state.loginPassword), React.createElement(Form.Control, {\n      type: \"password\",\n      name: `${this.state.loginPassword}`,\n      placeholder: \"Password\",\n      autoComplete: \"off\",\n      required: true,\n      onChange: this.myChangeHandler.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formGroupPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, this.state.registrationConfirmPassword), React.createElement(Form.Control, {\n      type: \"password\",\n      name: `${this.state.registrationConfirmPassword}`,\n      placeholder: \"Password\",\n      autoComplete: \"off\",\n      required: true,\n      onChange: this.myChangeHandler.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"submit\",\n      variant: \"success\",\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, \"Submit\"))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      onClick: this.handleShow.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, \"Login\"))), React.createElement(Modal, {\n      show: this.state.forgetModalShow,\n      onHide: this.handleClose.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, \"Forget Password\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, React.createElement(Form, {\n      noValidate: true,\n      validated: this.state.validated,\n      onSubmit: this.handleSubmit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formGroupEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, this.state.loginEmail), React.createElement(Form.Control, {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Enter email\",\n      autoComplete: \"off\",\n      required: true,\n      onChange: this.myChangeHandler.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"submit\",\n      variant: \"secondary\",\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }, \"Recover Password\"))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.handleShow.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, \"Login\")))));\n  }\n\n}","map":{"version":3,"sources":["/Users/shubhamlal/DevelopmentCodes/simplylearnanythingReact/simplylearn/src/Components/Header.js"],"names":["React","Component","BrowserRouter","Router","Redirect","useHistory","Link","Route","Switch","Home","About","Popup","SocialIcon","Button","Modal","ModalTitle","ModalBody","ModalFooter","Form","logo","DynamicContent","Notfound","axios","Header","constructor","state","categories","postContents","isLogin","modalShow","registerModalShow","forgetModalShow","validated","email","password","errormessage","loginEmail","loginPassword","registerationUserName","registrationConfirmPassword","forgetEmail","token","errorMessage","successMessage","urlName","urlContent","active","handleSubmit","event","preventDefault","form","currentTarget","err","console","log","checkValidity","stopPropagation","setState","data","name","c_password","myChangeHandler","target","nam","val","value","componentDidMount","config","headers","get","then","response","status","loginUser","emailId","loginApiUser","bodyFormData","FormData","myurl","set","method","url","success","statusText","catch","loginOut","handleClose","ShowRegistrationForm","ShowForgetPassword","handleShow","loadContent","slug","length","render","height","width","color","bind","map","category","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Redirect, useHistory, Link, Route, Switch } from 'react-router-dom';\nimport Home from './Home';\nimport About from './About';\n// import Category from './Category/Index';\n// import Dashboard from './Dashboard/Dashboard';\nimport Popup from './Popup';\nimport { SocialIcon } from 'react-social-icons';\nimport '../css/style.css';\nimport { Button } from 'react-bootstrap';\nimport Modal from 'react-bootstrap/Modal';\nimport ModalTitle from 'react-bootstrap/ModalTitle';\nimport ModalBody from 'react-bootstrap/ModalBody';\nimport ModalFooter from 'react-bootstrap/ModalFooter';\nimport Form from 'react-bootstrap/Form';\nimport logo from './Images/mumbai2.png';\nimport DynamicContent from './DynamicContent';\nimport Notfound from './Notfound';\nimport axios from \"axios\";\n\n\n\nexport default class Header extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            categories: [],\n            postContents:[],\n            isLogin: false,\n            modalShow: false,\n            registerModalShow: false,\n            forgetModalShow: false,\n            validated: false,\n            email: ' ',\n            password: ' ',\n            errormessage: ' ',\n            loginEmail: 'Email',\n            loginPassword: 'Password',\n            registerationUserName: 'Username',\n            registrationConfirmPassword: 'ConfirmPassword',\n            forgetEmail: 'Email Id',\n            token: '',\n            errorMessage: '',\n            successMessage: '',\n            urlName: '',\n            urlContent: 'Hello World Shubham',\n            active: false\n        }\n    }\n\n    // const [validated, setValidated] = useState(false);\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const form = event.currentTarget;\n        let err = '';\n        console.log(form.email);\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        if (this.state.email === ' ') {\n            // alert(\"Please Enter Proper Email\");\n            err = <strong className=\"warning\">Please Enter Proper Email</strong>;\n            this.setState({ errormessage: err, });\n        }\n        if (this.state.password === ' ') {\n            // alert(\"Please Enter Correct Password\");\n            err = <strong className=\"warning\">Please Enter Correct Password</strong>;\n            this.setState({ errormessage: err, });\n        }\n        this.setState({\n            validated: true,\n\n        });\n        let data = {\n            name: this.state.registerationUserName,\n            email: this.state.email,\n            password: this.state.registrationConfirmPassword,\n            c_password: this.state.registrationConfirmPassword\n        }\n        // console.log(`Hi I am from Data ${data.name}`);\n        // setValidated(true);\n    }\n\n    myChangeHandler(event) {\n        event.preventDefault();\n        console.log(event.target.name)\n        let nam = event.target.name;\n        let val = event.target.value;\n        console.log(`Hi${event.target.name}`);\n        this.setState({\n            [nam]: val\n        });\n        console.log(`Hello${this.state.loginEmail}`);\n    }\n\n    componentDidMount() {\n        var config = {\n            headers: { \n                'Access-Control-Allow-Origin' : '*.learnincredible.com',\n                'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n                'Access-Control-Allow-Headers': 'X-Requested-With',\n                'X-Requested-With': 'XMLHttpRequest'\n              },\n        };\n        axios.get('/api/CategoryName')\n            .then(response => {\n                this.setState({ \n                    categories: response.data.data,\n                    // urlContent: \"Hello World Shubham\"\n                 });\n                console.log(response.data.data)\n                console.log(response.status)\n                console.log(response)\n                console.log(this.state.categories)\n                 \n                 console.log(typeof(response))\n            });\n    }\n    \n\n    loginUser() {\n        var emailId = this.state.email\n        var password = this.state.password\n        console.log(`Hey${emailId}`)\n        console.log(password)\n        this.loginApiUser(emailId,password)\n        // if(emailId == 'Shubham' && password == 'Shubham'){\n        //     this.setState({\n        //         isLogin: true\n        //     });\n        // }\n        // this.setState({\n        //     isLogin: false\n        // });\n        \n        // console.log(this.state.isLogin);\n    }\n    loginApiUser(emailId,password){\n        console.log(`I am From LoginAPI USeremail${emailId}`);\n        console.log(`I am From LoginAPI User Password${password}`);\n        var bodyFormData = new FormData();\n        var myurl = '/api/login'\n        bodyFormData.set(`${emailId}`, `${password}`);\n        console.log(bodyFormData)\n        // axios.post('http://localhost:8000/api/login')\n        //     .then(response => {\n        //         this.setState({ categories: response.data });\n        //     });\n            axios({\n                method: 'post',\n                url: 'http://localhost:8000/api/login',\n                data: {\n                    email: `${emailId}`,\n                    password: `${password}`\n                },\n                // headers: {'Content-Type': 'application/json' }\n                }).then(response => {\n                    // handle success\n                    console.log('first one')\n                    console.log(response.data.success.token);\n                    console.log(response.data);\n                    console.log(response.status);\n                    console.log(response.statusText);\n                    console.log(response.headers);\n                    console.log(response.config);\n                    console.log(response.data);\n                    console.log(response);\n                    this.setState({ \n                        token: response.data.success.token,\n                        isLogin: true,\n                        successMessage: \"You have successfully Logged In\"\n                     });\n                })\n                // {\n                //     \n                // }).then(response => {\n                //     this.setState({ categories: response.data });\n                // });\n                \n                .catch(response => {\n                    //handle error\n                    console.log('second one')\n                    console.log(response);\n                });\n    }\n    loginOut() {\n        this.setState({\n            isLogin: false,\n            email: ' ',\n            password: ' ',\n            token: ' '\n        });\n        console.log(this.state.isLogin);\n        \n    }\n\n    handleClose() {\n        this.setState({\n            modalShow: false,\n            registerModalShow: false,\n            forgetModalShow: false,\n        });\n        console.log(this.state.modalShow);\n    }\n    ShowRegistrationForm() {\n        this.setState({\n            modalShow: false,\n            registerModalShow: true,\n            forgetModalShow: false,\n        });\n    }\n    ShowForgetPassword() {\n        this.setState({\n            modalShow: false,\n            registerModalShow: false,\n            forgetModalShow: true,\n        });\n    }\n    handleShow() {\n        this.setState({\n            modalShow: true,\n            registerModalShow: false,\n            forgetModalShow: false,\n        });\n        console.log('Hi' + this.state.modalShow);\n    }\n    loadContent(slug){\n        // console.log(slug);\n        axios({\n            method:'GET',\n            url: `http://localhost:8000/api/getContents/${slug}`,\n            // data: {\n            //     slug:  `${slug}`\n            // }\n        }).then(response => {\n            if(response.data.data.length != 0){\n                this.setState({\n                    urlName: `${slug}`,\n                    urlContent: `${slug}`,\n                    postContents: response.data.data,\n                    active: true,\n                })\n                // console.log(this.state.postContents)\n                // console.log(response.data.data.length);\n                // console.log(typeof(response.data.data));\n                // console.log(response.data.data);\n                console.log(this.state.postContents)\n            }else {\n                console.log('empty')\n            }\n            \n            // console.log(response.data);\n            // console.log(response);\n        }).catch(response => {\n            console.log('Error Logs');\n        });\n    }\n\n    render() {\n            return (\n                <Router>\n                    <div>\n                        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                            <ul className=\"navbar-nav mr-auto\">\n                                <li className=\"nav-item active\">\n                                    <SocialIcon url=\"https://facebook.com/jaketrent\" network=\"facebook\" style={{ height: 25, width: 25 }} bgColor=\"white\" /> &nbsp;&nbsp;\n                                    <SocialIcon url=\"https://twitter.com/jaketrent\" network=\"twitter\" style={{ height: 25, width: 25 }} bgColor=\"white\" /> &nbsp;&nbsp;\n                                    <SocialIcon url=\"https://linkedin.com/jaketrent\" network=\"linkedin\" style={{ height: 25, width: 25 }} bgColor=\"white\" /> &nbsp;&nbsp;\n                                </li>\n                            </ul>\n                            <span style={{ color: \"white\" }} onClick={this.handleShow.bind(this)}>Login</span>\n                        </nav>\n                        <div className=\"header\">\n                            <h2 onClick={this.loadContent.bind(this,`/`)}>\n                            <Link to=\"/\">Simply Learn Anything</Link>\n                                {/* <img src={logo} width=\"15%\" height=\"15%\" /> */}\n                            </h2>\n                        </div>\n                        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                            {/* <Link to=\"/\" className=\"navbar-brand\">Navbar</Link> */}\n                            {/* <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                                <span className=\"navbar-toggler-icon\"></span>\n                            </button> */}\n\n                            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                                <ul className=\"navbar-nav mr-auto\">\n                                    {\n                                        this.state.categories.map(category => {\n                                            return (\n                                                <li className={`nav-item ${this.state.active ? \"active\" : \"inactive\"}`} onClick={this.loadContent.bind(this,`${category.slug}`)}>\n                                                    <Link to={`/${category.slug}`} className=\"nav-link\">{category.name} <span className=\"sr-only\">(current)</span></Link>\n                                                </li>\n                                            )\n                                        })\n                                    }\n                                    <li className=\"nav-item active\">\n                                        <Link to=\"/about\" className=\"nav-link\">About Us<span className=\"sr-only\">(current)</span></Link>\n                                    </li>\n                                    {/* <li className=\"nav-item active\">\n                                    <Link to=\"/Category\" className=\"nav-link\">Category<span className=\"sr-only\">(current)</span></Link>\n                                </li> */}\n                                </ul>\n                                {/* <form className=\"form-inline my-2 my-lg-0\">\n                                    <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n                                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n                                </form> */}\n                            </div>\n                        </nav>\n                        {\n                            this.state.categories.map(category => {\n                                return (\n                                    <Route exact path={`${category.slug}`} component={`${category.name}`} />\n                                )\n                            })\n                        }\n                        <Switch>\n                            {/* <Route exact path=\"/\" component={Home} /> */}\n                            {/* <Route exact path=\"/\" render={(props) => <Home {...props} isAuthed={true} />} /> */}\n                            <Route exact path={`/${this.state.urlName}`} render={(props) => <DynamicContent {...props} isMyName={this.state.postContents} />} />\n                            {/* <Route exact path=\"/about\" component={About} /> */}\n                            <Route exact path=\"/about\" component={About} />\n                            {/* <Route exact path=\"/Category\" component={Category} /> */}\n                            <Route exact path=\"*\" component={Notfound} />\n                        </Switch>\n\n\n                        {/* Login Modal start Here */}\n\n                        <Modal show={this.state.modalShow} onHide={this.handleClose.bind(this)}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Login Form</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>\n                                <Form noValidate validated={this.state.validated} onSubmit={this.handleSubmit.bind(this)}>\n                                    <Form.Group controlId=\"formGroupEmail\">\n                                        <Form.Label>{this.state.loginEmail}</Form.Label>\n                                        <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\" autoComplete=\"off\" required onChange={this.myChangeHandler.bind(this)} />\n\n                                    </Form.Group>\n                                    <Form.Group controlId=\"formGroupPassword\">\n                                        <Form.Label>{this.state.loginPassword}</Form.Label>\n                                        <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" autoComplete=\"off\" required onChange={this.myChangeHandler.bind(this)} />\n\n                                    </Form.Group>\n                                    <Form.Group id=\"formGridCheckbox\">\n                                        <Form.Check type=\"checkbox\" label=\"Remember Me\" />\n                                    </Form.Group>\n                                    <Button type=\"submit\" className=\"text-center\" onClick={this.loginUser.bind(this)}>Login</Button>\n                                </Form>\n                            </Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={this.ShowForgetPassword.bind(this)}>\n                                    Forget Password\n                                </Button>\n\n                                <Button type=\"submit\" variant=\"success\" onClick={this.ShowRegistrationForm.bind(this)}>\n                                    Create New Account\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n\n\n                        {/* Registeration Model Starts Here */}\n                        <Modal show={this.state.registerModalShow} onHide={this.handleClose.bind(this)}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Registration Form</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>\n                                <Form noValidate validated={this.state.validated} onSubmit={this.handleSubmit.bind(this)}>\n                                    <Form.Group controlId=\"formGroupEmail\">\n                                        <Form.Label>{this.state.registerationUserName}</Form.Label>\n                                        <Form.Control type=\"text\" name={`${this.state.registerationUserName}`} placeholder=\"Enter email\" autoComplete=\"off\" required onChange={this.myChangeHandler.bind(this)} />\n                                    </Form.Group>\n                                    <Form.Group controlId=\"formGroupEmail\">\n                                        <Form.Label>{this.state.loginEmail}</Form.Label>\n                                        <Form.Control type=\"email\" name={`${this.state.loginEmail}`} placeholder=\"Enter email\" autoComplete=\"off\" required onChange={this.myChangeHandler.bind(this)} />\n                                    </Form.Group>\n                                    <Form.Group controlId=\"formGroupPassword\">\n                                        <Form.Label>{this.state.loginPassword}</Form.Label>\n                                        <Form.Control type=\"password\" name={`${this.state.loginPassword}`} placeholder=\"Password\" autoComplete=\"off\" required onChange={this.myChangeHandler.bind(this)} />\n                                    </Form.Group>\n                                    <Form.Group controlId=\"formGroupPassword\">\n                                        <Form.Label>{this.state.registrationConfirmPassword}</Form.Label>\n                                        <Form.Control type=\"password\" name={`${this.state.registrationConfirmPassword}`} placeholder=\"Password\" autoComplete=\"off\" required onChange={this.myChangeHandler.bind(this)} />\n                                    </Form.Group>\n                                    {/* <Form.Group id=\"formGridCheckbox\">\n                                        <Form.Check type=\"checkbox\" label=\"Remember Me\" />\n                                    </Form.Group>  */}\n                                    <Button type=\"submit\" variant=\"success\" className=\"text-center\">Submit</Button>\n                                </Form>\n                            </Modal.Body>\n                            <Modal.Footer>\n                                {/* <Button variant=\"secondary\" onClick={this.handleClose.bind(this)}>\n                                Close\n                                </Button> */}\n\n                                <Button type=\"submit\" onClick={this.handleShow.bind(this)}>\n                                    Login\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n\n\n\n                        {/* Recover Password Modal start Here */}\n\n                        <Modal show={this.state.forgetModalShow} onHide={this.handleClose.bind(this)}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Forget Password</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>\n                                <Form noValidate validated={this.state.validated} onSubmit={this.handleSubmit.bind(this)}>\n                                    <Form.Group controlId=\"formGroupEmail\">\n                                        <Form.Label>{this.state.loginEmail}</Form.Label>\n                                        <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\" autoComplete=\"off\" required onChange={this.myChangeHandler.bind(this)} />\n                                    </Form.Group>\n                                    <Button type=\"submit\" variant=\"secondary\" className=\"text-center\">Recover Password</Button>\n                                </Form>\n                            </Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"primary\" onClick={this.handleShow.bind(this)}>\n                                    Login\n                                </Button>\n\n                                {/* <Button type=\"submit\" variant=\"success\" onClick={this.ShowRegistrationForm.bind(this)}>\n                                Create New Account\n                                </Button> */}\n                            </Modal.Footer>\n                        </Modal>\n                    </div>\n                    </Router>\n            );\n                                \n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}