{"ast":null,"code":"import _pt from \"prop-types\";\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport Parser from './Parser';\nimport Markup from './Markup';\nexport default function Interweave(props) {\n  var _props$content = props.content,\n      content = _props$content === void 0 ? '' : _props$content,\n      _props$disableFilters = props.disableFilters,\n      disableFilters = _props$disableFilters === void 0 ? false : _props$disableFilters,\n      _props$disableMatcher = props.disableMatchers,\n      disableMatchers = _props$disableMatcher === void 0 ? false : _props$disableMatcher,\n      _props$emptyContent = props.emptyContent,\n      emptyContent = _props$emptyContent === void 0 ? null : _props$emptyContent,\n      _props$filters = props.filters,\n      filters = _props$filters === void 0 ? [] : _props$filters,\n      _props$matchers = props.matchers,\n      matchers = _props$matchers === void 0 ? [] : _props$matchers,\n      _props$onAfterParse = props.onAfterParse,\n      onAfterParse = _props$onAfterParse === void 0 ? null : _props$onAfterParse,\n      _props$onBeforeParse = props.onBeforeParse,\n      onBeforeParse = _props$onBeforeParse === void 0 ? null : _props$onBeforeParse,\n      _props$tagName = props.tagName,\n      tagName = _props$tagName === void 0 ? 'span' : _props$tagName,\n      parserProps = _objectWithoutPropertiesLoose(props, [\"content\", \"disableFilters\", \"disableMatchers\", \"emptyContent\", \"filters\", \"matchers\", \"onAfterParse\", \"onBeforeParse\", \"tagName\"]);\n\n  var allMatchers = disableMatchers ? [] : matchers;\n  var allFilters = disableFilters ? [] : filters;\n  var beforeCallbacks = onBeforeParse ? [onBeforeParse] : [];\n  var afterCallbacks = onAfterParse ? [onAfterParse] : [];\n  allMatchers.forEach(function (matcher) {\n    if (matcher.onBeforeParse) {\n      beforeCallbacks.push(matcher.onBeforeParse.bind(matcher));\n    }\n\n    if (matcher.onAfterParse) {\n      afterCallbacks.push(matcher.onAfterParse.bind(matcher));\n    }\n  });\n  var markup = beforeCallbacks.reduce(function (string, callback) {\n    var nextString = callback(string, props);\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      if (typeof nextString !== 'string') {\n        throw new TypeError('Interweave `onBeforeParse` must return a valid HTML string.');\n      }\n    }\n\n    return nextString;\n  }, content || '');\n  var parser = new Parser(markup, parserProps, allMatchers, allFilters);\n  var nodes = afterCallbacks.reduce(function (parserNodes, callback) {\n    var nextNodes = callback(parserNodes, props);\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      if (!Array.isArray(nextNodes)) {\n        throw new TypeError('Interweave `onAfterParse` must return an array of strings and React elements.');\n      }\n    }\n\n    return nextNodes;\n  }, parser.parse());\n  return React.createElement(Markup, {\n    emptyContent: emptyContent,\n    tagName: tagName,\n    parsedContent: nodes.length === 0 ? undefined : nodes\n  });\n}\nInterweave.propTypes = {\n  disableFilters: _pt.bool,\n  disableMatchers: _pt.bool,\n  filters: _pt.arrayOf(_pt.any),\n  matchers: _pt.arrayOf(_pt.any),\n  onAfterParse: _pt.oneOfType([_pt.any, _pt.oneOf([null])]),\n  onBeforeParse: _pt.oneOfType([_pt.any, _pt.oneOf([null])])\n};","map":{"version":3,"sources":["/Users/shubhamlal/DevelopmentCodes/simplylearnanythingReact/simplylearn/node_modules/interweave/esm/Interweave.js"],"names":["_pt","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","length","indexOf","React","Parser","Markup","Interweave","props","_props$content","content","_props$disableFilters","disableFilters","_props$disableMatcher","disableMatchers","_props$emptyContent","emptyContent","_props$filters","filters","_props$matchers","matchers","_props$onAfterParse","onAfterParse","_props$onBeforeParse","onBeforeParse","_props$tagName","tagName","parserProps","allMatchers","allFilters","beforeCallbacks","afterCallbacks","forEach","matcher","push","bind","markup","reduce","string","callback","nextString","process","env","NODE_ENV","TypeError","parser","nodes","parserNodes","nextNodes","Array","isArray","parse","createElement","parsedContent","undefined","propTypes","bool","arrayOf","any","oneOfType","oneOf"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport Parser from './Parser';\nimport Markup from './Markup';\nexport default function Interweave(props) {\n  var _props$content = props.content,\n      content = _props$content === void 0 ? '' : _props$content,\n      _props$disableFilters = props.disableFilters,\n      disableFilters = _props$disableFilters === void 0 ? false : _props$disableFilters,\n      _props$disableMatcher = props.disableMatchers,\n      disableMatchers = _props$disableMatcher === void 0 ? false : _props$disableMatcher,\n      _props$emptyContent = props.emptyContent,\n      emptyContent = _props$emptyContent === void 0 ? null : _props$emptyContent,\n      _props$filters = props.filters,\n      filters = _props$filters === void 0 ? [] : _props$filters,\n      _props$matchers = props.matchers,\n      matchers = _props$matchers === void 0 ? [] : _props$matchers,\n      _props$onAfterParse = props.onAfterParse,\n      onAfterParse = _props$onAfterParse === void 0 ? null : _props$onAfterParse,\n      _props$onBeforeParse = props.onBeforeParse,\n      onBeforeParse = _props$onBeforeParse === void 0 ? null : _props$onBeforeParse,\n      _props$tagName = props.tagName,\n      tagName = _props$tagName === void 0 ? 'span' : _props$tagName,\n      parserProps = _objectWithoutPropertiesLoose(props, [\"content\", \"disableFilters\", \"disableMatchers\", \"emptyContent\", \"filters\", \"matchers\", \"onAfterParse\", \"onBeforeParse\", \"tagName\"]);\n\n  var allMatchers = disableMatchers ? [] : matchers;\n  var allFilters = disableFilters ? [] : filters;\n  var beforeCallbacks = onBeforeParse ? [onBeforeParse] : [];\n  var afterCallbacks = onAfterParse ? [onAfterParse] : [];\n  allMatchers.forEach(function (matcher) {\n    if (matcher.onBeforeParse) {\n      beforeCallbacks.push(matcher.onBeforeParse.bind(matcher));\n    }\n\n    if (matcher.onAfterParse) {\n      afterCallbacks.push(matcher.onAfterParse.bind(matcher));\n    }\n  });\n  var markup = beforeCallbacks.reduce(function (string, callback) {\n    var nextString = callback(string, props);\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      if (typeof nextString !== 'string') {\n        throw new TypeError('Interweave `onBeforeParse` must return a valid HTML string.');\n      }\n    }\n\n    return nextString;\n  }, content || '');\n  var parser = new Parser(markup, parserProps, allMatchers, allFilters);\n  var nodes = afterCallbacks.reduce(function (parserNodes, callback) {\n    var nextNodes = callback(parserNodes, props);\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      if (!Array.isArray(nextNodes)) {\n        throw new TypeError('Interweave `onAfterParse` must return an array of strings and React elements.');\n      }\n    }\n\n    return nextNodes;\n  }, parser.parse());\n  return React.createElement(Markup, {\n    emptyContent: emptyContent,\n    tagName: tagName,\n    parsedContent: nodes.length === 0 ? undefined : nodes\n  });\n}\nInterweave.propTypes = {\n  disableFilters: _pt.bool,\n  disableMatchers: _pt.bool,\n  filters: _pt.arrayOf(_pt.any),\n  matchers: _pt.arrayOf(_pt.any),\n  onAfterParse: _pt.oneOfType([_pt.any, _pt.oneOf([null])]),\n  onBeforeParse: _pt.oneOfType([_pt.any, _pt.oneOf([null])])\n};"]},"metadata":{},"sourceType":"module"}