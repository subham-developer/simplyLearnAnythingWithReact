{"ast":null,"code":"import _pt from \"prop-types\";\nimport React from 'react';\nimport Element from './Element';\nimport Parser from './Parser';\nexport default function Markup(props) {\n  var content = props.content,\n      emptyContent = props.emptyContent,\n      parsedContent = props.parsedContent,\n      tagName = props.tagName;\n  var tag = tagName || 'div';\n  var mainContent;\n\n  if (parsedContent) {\n    mainContent = parsedContent;\n  } else {\n    var markup = new Parser(content || '', props).parse();\n\n    if (markup.length > 0) {\n      mainContent = markup;\n    }\n  }\n\n  if (!mainContent) {\n    mainContent = emptyContent;\n  }\n\n  if (tag === 'fragment') {\n    return React.createElement(React.Fragment, null, mainContent);\n  }\n\n  return React.createElement(Element, {\n    tagName: tag\n  }, mainContent);\n}\nMarkup.propTypes = {\n  content: _pt.oneOfType([_pt.string, _pt.oneOf([null])]),\n  emptyContent: _pt.node,\n  parsedContent: _pt.node,\n  tagName: _pt.oneOfType([_pt.oneOf(['fragment']), _pt.string])\n};","map":{"version":3,"sources":["/Users/shubhamlal/DevelopmentCodes/simplylearnanythingReact/simplylearn/node_modules/interweave/esm/Markup.js"],"names":["_pt","React","Element","Parser","Markup","props","content","emptyContent","parsedContent","tagName","tag","mainContent","markup","parse","length","createElement","Fragment","propTypes","oneOfType","string","oneOf","node"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,YAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACpC,MAAIC,OAAO,GAAGD,KAAK,CAACC,OAApB;AAAA,MACIC,YAAY,GAAGF,KAAK,CAACE,YADzB;AAAA,MAEIC,aAAa,GAAGH,KAAK,CAACG,aAF1B;AAAA,MAGIC,OAAO,GAAGJ,KAAK,CAACI,OAHpB;AAIA,MAAIC,GAAG,GAAGD,OAAO,IAAI,KAArB;AACA,MAAIE,WAAJ;;AAEA,MAAIH,aAAJ,EAAmB;AACjBG,IAAAA,WAAW,GAAGH,aAAd;AACD,GAFD,MAEO;AACL,QAAII,MAAM,GAAG,IAAIT,MAAJ,CAAWG,OAAO,IAAI,EAAtB,EAA0BD,KAA1B,EAAiCQ,KAAjC,EAAb;;AAEA,QAAID,MAAM,CAACE,MAAP,GAAgB,CAApB,EAAuB;AACrBH,MAAAA,WAAW,GAAGC,MAAd;AACD;AACF;;AAED,MAAI,CAACD,WAAL,EAAkB;AAChBA,IAAAA,WAAW,GAAGJ,YAAd;AACD;;AAED,MAAIG,GAAG,KAAK,UAAZ,EAAwB;AACtB,WAAOT,KAAK,CAACc,aAAN,CAAoBd,KAAK,CAACe,QAA1B,EAAoC,IAApC,EAA0CL,WAA1C,CAAP;AACD;;AAED,SAAOV,KAAK,CAACc,aAAN,CAAoBb,OAApB,EAA6B;AAClCO,IAAAA,OAAO,EAAEC;AADyB,GAA7B,EAEJC,WAFI,CAAP;AAGD;AACDP,MAAM,CAACa,SAAP,GAAmB;AACjBX,EAAAA,OAAO,EAAEN,GAAG,CAACkB,SAAJ,CAAc,CAAClB,GAAG,CAACmB,MAAL,EAAanB,GAAG,CAACoB,KAAJ,CAAU,CAAC,IAAD,CAAV,CAAb,CAAd,CADQ;AAEjBb,EAAAA,YAAY,EAAEP,GAAG,CAACqB,IAFD;AAGjBb,EAAAA,aAAa,EAAER,GAAG,CAACqB,IAHF;AAIjBZ,EAAAA,OAAO,EAAET,GAAG,CAACkB,SAAJ,CAAc,CAAClB,GAAG,CAACoB,KAAJ,CAAU,CAAC,UAAD,CAAV,CAAD,EAA0BpB,GAAG,CAACmB,MAA9B,CAAd;AAJQ,CAAnB","sourcesContent":["import _pt from \"prop-types\";\nimport React from 'react';\nimport Element from './Element';\nimport Parser from './Parser';\nexport default function Markup(props) {\n  var content = props.content,\n      emptyContent = props.emptyContent,\n      parsedContent = props.parsedContent,\n      tagName = props.tagName;\n  var tag = tagName || 'div';\n  var mainContent;\n\n  if (parsedContent) {\n    mainContent = parsedContent;\n  } else {\n    var markup = new Parser(content || '', props).parse();\n\n    if (markup.length > 0) {\n      mainContent = markup;\n    }\n  }\n\n  if (!mainContent) {\n    mainContent = emptyContent;\n  }\n\n  if (tag === 'fragment') {\n    return React.createElement(React.Fragment, null, mainContent);\n  }\n\n  return React.createElement(Element, {\n    tagName: tag\n  }, mainContent);\n}\nMarkup.propTypes = {\n  content: _pt.oneOfType([_pt.string, _pt.oneOf([null])]),\n  emptyContent: _pt.node,\n  parsedContent: _pt.node,\n  tagName: _pt.oneOfType([_pt.oneOf(['fragment']), _pt.string])\n};"]},"metadata":{},"sourceType":"module"}