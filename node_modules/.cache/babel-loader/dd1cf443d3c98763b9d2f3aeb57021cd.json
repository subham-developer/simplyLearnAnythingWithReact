{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamlal/DevelopmentCodes/simplylearnanythingReact/simplylearn/src/Components/Header.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    borderBottom: `1px solid ${theme.palette.divider}`\n  },\n  toolbarTitle: {\n    flex: 1\n  },\n  toolbarSecondary: {\n    justifyContent: 'space-between',\n    overflowX: 'auto'\n  },\n  toolbarLink: {\n    padding: theme.spacing(1),\n    flexShrink: 0\n  }\n})); // export default function Header(props) {\n//     console.log(props);\n\nconst classes = useStyles(); //   const { sections, title } = props;\n\nexport default class Header extends Component {\n  constructor(props) {\n    console.log(props); // this.state = {\n    //     'sections': props.title,\n    //     'title' : props.sections\n    // }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      className: classes.toolbar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Subscribe\"), React.createElement(Typography, {\n      component: \"h2\",\n      variant: \"h5\",\n      color: \"inherit\",\n      align: \"center\",\n      noWrap: true,\n      className: classes.toolbarTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.props.title), React.createElement(IconButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(SearchIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"outlined\",\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Sign up\")), React.createElement(Toolbar, {\n      component: \"nav\",\n      variant: \"dense\",\n      className: classes.toolbarSecondary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.props.sections.map(section => React.createElement(Link, {\n      color: \"inherit\",\n      noWrap: true,\n      key: section.title,\n      variant: \"body2\",\n      href: section.url,\n      className: classes.toolbarLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, section.title))));\n  }\n\n}\nHeader.propTypes = {\n  sections: PropTypes.array,\n  title: PropTypes.string\n};","map":{"version":3,"sources":["/Users/shubhamlal/DevelopmentCodes/simplylearnanythingReact/simplylearn/src/Components/Header.js"],"names":["React","Component","PropTypes","makeStyles","Toolbar","Button","IconButton","SearchIcon","Typography","Link","useStyles","theme","toolbar","borderBottom","palette","divider","toolbarTitle","flex","toolbarSecondary","justifyContent","overflowX","toolbarLink","padding","spacing","flexShrink","classes","Header","constructor","props","console","log","render","title","sections","map","section","url","propTypes","array","string"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbarTitle: {\n    flex: 1,\n  },\n  toolbarSecondary: {\n    justifyContent: 'space-between',\n    overflowX: 'auto',\n  },\n  toolbarLink: {\n    padding: theme.spacing(1),\n    flexShrink: 0,\n  },\n}));\n\n// export default function Header(props) {\n//     console.log(props);\n  const classes = useStyles();\n//   const { sections, title } = props;\nexport default class Header extends Component{\n    constructor(props){\n        console.log(props);\n        // this.state = {\n        //     'sections': props.title,\n        //     'title' : props.sections\n        // }\n    }\n    render(){\n    return (\n        <React.Fragment>\n        <Toolbar className={classes.toolbar}>\n            <Button size=\"small\">Subscribe</Button>\n            <Typography\n            component=\"h2\"\n            variant=\"h5\"\n            color=\"inherit\"\n            align=\"center\"\n            noWrap\n            className={classes.toolbarTitle}\n            >\n            {this.props.title}\n            </Typography>\n            <IconButton>\n            <SearchIcon />\n            </IconButton>\n            <Button variant=\"outlined\" size=\"small\">\n            Sign up\n            </Button>\n        </Toolbar>\n        <Toolbar component=\"nav\" variant=\"dense\" className={classes.toolbarSecondary}>\n            {this.props.sections.map(section => (\n            <Link\n                color=\"inherit\"\n                noWrap\n                key={section.title}\n                variant=\"body2\"\n                href={section.url}\n                className={classes.toolbarLink}\n            >\n                {section.title}\n            </Link>\n            ))}\n        </Toolbar>\n        </React.Fragment>\n    );\n    }\n    }\n  \n\nHeader.propTypes = {\n  sections: PropTypes.array,\n  title: PropTypes.string,\n};"]},"metadata":{},"sourceType":"module"}